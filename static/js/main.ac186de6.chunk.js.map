{"version":3,"sources":["logo.svg","components/Education.js","components/Experience.js","components/ExperienceSection.js","components/AppWindow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Experience","props","state","company","location","title","start","end","handleClick","bind","e","preventDefault","alert","this","className","onClick","children","ExperienceSection","visible","Fragment","style","columnCount","marginLeft","TitleBar","windowClose","icon","faCircle","color","faTimes","transform","windowMin","faMinus","windowMax","faCaretDown","faCaretUp","AppWindow","close","setState","minimize","class","maximize","app","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac186de6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport '../style/Education.css';\n\nclass Education extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tschool: props.school,\n\t\t\tprogram: props.program,\n\t\t\tgradYear: props.gradYear,\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Education\">\n\t\t\t\t<div className=\"school\">{this.state.school}</div>\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<p className=\"program\">{this.state.program}</p>\n\t\t\t\t\t<p className=\"gradYear\">{this.state.gradYear}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Education;","import React from 'react';\nimport '../style/Experience.css';\n\nclass Experience extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcompany: props.company,\n\t\t\tlocation: props.location,\n\t\t\ttitle: props.title,\n\t\t\tstart: props.start,\n\t\t\tend: props.end,\n\t\t}\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e) {\n\t\te.preventDefault();\n\t\talert(`You clicked me [${this.state.title}]!`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"Experience\">\n\t\t\t\t\t<div className=\"company\">\n\t\t\t\t\t\t<div className=\"name\">{this.state.company}</div>\n\t\t\t\t\t\t<div className=\"location\">{this.state.location}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t<div className=\"title\" onClick={this.handleClick}>{this.state.title}</div>\n\t\t\t\t\t\t<div className=\"date\">{this.state.start} &mdash; {this.state.end}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"desc\">{this.props.children}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default Experience;","import React from 'react';\nimport Experience from './Experience';\nimport '../style/Experience.css';\n\nclass ExperienceSection extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { visible: true };\n\t}\n\n\t// <div className=\"section-header\">Experience</div>\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ExperienceSection\">\n\t\t\t\t{ this.state.visible &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Experience company=\"University of Toronto\"\n\t\t                    location=\"Toronto, Canada\"\n\t\t                    title=\"Teaching Assistant\"\n\t\t                    start=\"Sep 2017\"\n\t\t                    end=\"Present\">\n\t\t\t          <ul>\n\t\t\t            <li>Courses taught:\n\t\t\t            \t<ul style={{ columnCount: 2, marginLeft: '-1.5rem' }}>\n\t\t\t            \t\t<li>CSCC69: Operating Systems (x2)</li>\n\t\t\t            \t\t<li>CSCC24: Principles of Programming Languages (x1)</li>\n\t\t\t            \t\t<li>CSCB07: Software Design (x1)</li>\n\t\t\t            \t\t<li>CSCA48: Introduction to Computer Science II (x4)</li>\n\t\t\t            \t\t<li>CSCA08: Introduction to Computer Science I (x2)</li>\n\t\t\t            \t</ul>\n\t\t\t            </li>\n\t\t\t            <li>Utilized techniques in education to design and deliver engaging lessons \n\t\t\t            in the form of weekly tutorials, teaching over 150 students to date</li>\n\t\t\t            <li>Facilitated discussion among students by providing support through an online class forum</li>\n\t\t\t            <li>Encouraged student improvement through useful feedback provided while marking course evaluations such as assignments, midterms, and exams</li>\n\t\t\t          </ul>\n\t\t\t        </Experience>\n\t\t\t        <Experience company=\"Ontario Ministry of Education\"\n\t\t\t                    location=\"Toronto, Canada\"\n\t\t\t                    title=\"Full Stack Developer\"\n\t\t\t                    start=\"Sep 2017\"\n\t\t\t                    end=\"Dec 2017\">\n\t\t\t          <ul>\n\t\t\t            <li>Engineered an in-house search engine solution for effective querying of ministry documents, which was previously done manually over the course of several weeks, using Spring Boot, expediting the knowledge collection phase</li>\n\t\t\t            <li>Utilized OracleXE and Java to create modular object models, making it easier to prototype new front-end designs</li>\n\t\t\t            <li>Incorporated the Watson NLU API alongside statistical methods to create a standardized ranking system for document searches</li>\n\t\t\t            <li>Extensively used Bootstrap and JavaScript libraries (including jQuery) to construct a front-end that was easily usable by employees of different backgrounds and levels of technical knowledge</li>\n\t\t\t          </ul>\n\t\t\t        </Experience>\n\t\t        </React.Fragment>\n\t\t    }\n\t        </div>\n\t\t);\n\t}\n}\n\nexport default ExperienceSection;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { \n\tfaExpandAlt,\n\tfaMinus,\n\tfaTimes,\n\tfaCaretDown,\n\tfaCaretUp,\n\tfaCircle\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { \n\tfaWindowMinimize,\n} from '@fortawesome/free-regular-svg-icons'\n\nimport { faApple } from '@fortawesome/free-brands-svg-icons'\nimport '../style/AppWindow.css';\nimport ExperienceSection from './ExperienceSection';\n\nclass TitleBar extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: props.title,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"TitleBar\">\n\t\t\t\t<span className=\"fa-layers fa-fw\" onClick={this.props.windowClose}>\n\t\t\t\t\t<FontAwesomeIcon icon={faCircle} style={{ color: `rgb(252, 91, 87)` }} />\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} transform=\"shrink-7\" />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"fa-layers fa-fw\" onClick={this.props.windowMin}>\n\t\t\t\t\t<FontAwesomeIcon icon={faCircle} style={{ color: `rgb(229, 191, 60)` }} />\n\t\t\t\t\t<FontAwesomeIcon icon={faMinus} transform=\"shrink-7\" />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"fa-layers fa-fw\" onClick={this.props.windowMax}>\n\t\t\t\t\t<FontAwesomeIcon icon={faCircle} style={{ color: `rgb(87, 192, 56)` }} />\n\t\t\t\t\t<FontAwesomeIcon icon={faCaretDown} transform=\"shrink-5 down-2 left-2 rotate-45\"/>\n\t\t\t\t\t<FontAwesomeIcon icon={faCaretUp} transform=\"shrink-5 up-2 right-2 rotate-45\"/>\n\t\t\t\t</span>\n\t\t\t\t<div className=\"title\">{ this.state.title }</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass AppWindow extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tclass: \"AppWindow\",\n\t\t\tvisible: true,\n\t\t\tapp: \"Experience\",\n\t\t}\n\t\tthis.close = this.close.bind(this);\n\t\tthis.minimize = this.minimize.bind(this);\n\t\tthis.maximize = this.maximize.bind(this);\n\t}\n\n\tclose = () => {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tminimize = () => {\n\t\tthis.setState({ class: \"AppWindow-min\" });\n\t}\n\n\tmaximize = () => {\n\t\tif (this.state.class == \"AppWindow\") {\n\t\t\tthis.setState({ class: \"AppWindow-max\" });\n\t\t} else {\n\t\t\tthis.setState({ class: \"AppWindow\" });\n\t\t}\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ this.state.visible &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className={this.state.class}>\n\t\t\t\t\t\t<TitleBar title={this.state.app}\n\t\t\t\t\t\t\t\t windowClose={this.close}\n\t\t\t\t\t\t\t\t windowMin={this.minimize}\n\t\t\t\t\t\t\t\t windowMax={this.maximize}\n\t\t\t\t\t\t\t\t />\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<ExperienceSection />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nexport default AppWindow;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Education from './components/Education';\nimport ExperienceSection from './components/ExperienceSection';\nimport AppWindow from './components/AppWindow';\n\n// <Education school=\"University of Toronto\" gradYear=\"2020\" program=\"Computer Science\" />\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppWindow title=\"Experience\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Education from './components/Education';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//ReactDOM.render(<Education school=\"University of Toronto\" gradYear=\"2020\" program=\"Computer Science\" />,\n//\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}